#summary Utility to get in depth informations from a SWF file.

== Introduction ==

*swfinfo* is a command-line tool made with [http://code.google.com/p/redtamarin/ redtamarin].

It allows to parse the informations of a `*.swf` file.

== Details ==

TODO

== Documentation ==

*Usage*
{{{
swfinfo [-h] [-v] [-L] [-s] [-o:val[=opt]] [-p] [-a] [-u] [-k] [-x] [-n] [-t:val] [-g:val] [-w:val] file
}}}

*Options*
{{{
  file           a local <file> or remote <file>
                 in case of a  remote file, need to be a valid URL
                 eg. starting with http/ftp/etc.

  -h             this help
  
  -v             to see the program version
  
  -L             License and program informations

  -s             save a remote file
                 on the current local directory

  -o:val[=opt]   single line output configured by <opt>
                 when you use this mode the program will return
                 only the info from <opt> and nothing else
                 <val> can be:
                 * type, filetype
                   returns the signature+version (ex: SWF10)
                 * sign, signature
                   returns the signature (ex: SWC)
                 * version
                   returns the version (ex: 9)
                 * rect, rectangle
                   returns the rectangle (ex: x=0, y=0, w=550, h=400)
                 * fps, rate
                   returns the frame rate (ex: 24)
                 * frame, frames
                   returns the frame count (ex: 5)
                 * size [=B, K, M, G, T, P, E, Z, Y]
                   returns the uncompressed file size
                 * unzip, unzipped, uncompressed [=B, K, M, G, T, P, E, Z, Y]
                   returns the compressed file size
                 * metadata [=pp]
                   returns the metadata tag content if found
                 * date, time, timestamp [=string]
                   returns the compilation date if found (ex: 1294419029461)
                 * sdk, sdkversion
                   returns the Flex SDK version if found (ex: 4.0.0.7219)

  -p             parse SWF tags
                 this option need to be present for
                 -a -u -k -x -n -t options

  -a             display only the SWF tags header

  -n             not parsed valid SWF tags will output hex data
                 output is limited by option -t

  -x             parsed valid SWF tags will output hex data
                 output is limited by option -t

  -u             unknown SWF tags hex data will not be truncated

  -k             known SWF tags hex data will not be truncated

  -t:val         truncate SWF tags hex data from 0 to <val>
                 default <val> is 200

  -g:val         group hex data by the amount of <val>
                 default <val> is 8

  -w:val         try to limit the width of the hex data by a certain <val>
                 default <val> is 80
}}}

*Examples*

`$ swfinfo test.swf`
{{{
[ SWC9 rect=(x=0, y=0, w=550, h=400), fps=24, frames=5, size=160.66 KB (unzipped=297.61 KB) ]
}}}

without any options `swfinfo` will return a one liner
  * the signature<br>SWF or SWC (compressed)
  * the version<br> 9, 10, etc.
  * the rectangle coordinates
  * the frame rate in seconds
  * the number of frames
  * the size
  * the unzipped size<br>(if the file is compressed)

you can output even shorter informations with the option *-o*

`$ swfinfo -o:size test.swf`
{{{
160.66 KB
}}}


`$ swfinfo -o:size=M test.swf`
{{{
0.16 MB
}}}

`$ swfinfo -o:unzip test.swf`
{{{
297.61 KB
}}}

`$ swfinfo -o:fps test.swf`
{{{
24
}}}

etc.

for *size* and *unzip* (unzipped, uncompressed) you can also force the output to
  * B for bytes
  * M for MegaBytes
  * G for GigaBytes
  * T for TeraBytes
  * etc. (Peta, Exa, Zetta, Yotta)

for *metadata* you can force the output to *pp*<br>
that will pretty print the XML (with spaces and indentations)<br>
(the default is non-formated all on a single line)

`$ swfinfo -o:metadata test.swf`
{{{
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'><rdf:Description rdf:about='' xmlns:dc='http://purl.org/dc/elements/1.1'><dc:format>application/x-shockwave-flash</dc:format><dc:title>Adobe Flex 4 Application</dc:title><dc:description>http://www.adobe.com/products/flex</dc:description><dc:publisher>unknown</dc:publisher><dc:creator>unknown</dc:creator><dc:language>EN</dc:language><dc:date>07-Jan-2011</dc:date></rdf:Description></rdf:RDF>
}}}

`$ swfinfo -o:metadata=pp test.swf`
{{{
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1">
    <dc:format>application/x-shockwave-flash</dc:format>
    <dc:title>Adobe Flex 4 Application</dc:title>
    <dc:description>http://www.adobe.com/products/flex</dc:description>
    <dc:publisher>unknown</dc:publisher>
    <dc:creator>unknown</dc:creator>
    <dc:language>EN</dc:language>
    <dc:date>07-Jan-2011</dc:date>
  </rdf:Description>
</rdf:RDF>
}}}

for *date* (time, timestamp) you can force the output to *string*<br>
(the default is the time in milliseconds, like a date valueOf)

`$ swfinfo -o:date test.swf`
{{{
1294419029461
}}}

`$ swfinfo -o:date=string test.swf`
{{{
Fri Jan 7 16:50:29 GMT+0000 2011
}}}