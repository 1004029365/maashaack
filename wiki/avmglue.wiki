#summary the avmglue platform library.
#labels Introduction

== Introduction ==

avmglue is an open source implementation of the following runtimes API:
 * Flash Player 9
 * Flash Player 10
 * Flash Player 10.0.32
 * Flash Player 10.1
 * AIR 1.0
 * AIR 1.5
 * AIR 1.5.1
 * AIR 1.5.2
 * AIR 2.0

We will refer to it as the Flash Platform API , shortened to *FPAPI*.

Based on publicly accessible documentation:
[http://help.adobe.com/en_US/FlashPlatform/beta/reference/actionscript/3/package-summary.html BETA ActionScript 3.0 Reference for the Adobe Flash Platform]<br>
[http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/ ActionScript 3.0 Reference for the Adobe Flash Platform]<br>
[http://help.adobe.com/en_US/AS3LCR/Flash_10.0/ Flash CS4 Professional ActionScript 3.0 Language Reference]<br>
etc.

The goal is to implement in AS3 and/or native C/C++ the FPAPI in order to generate `*.abc` files compatible with [http://www.mozilla.org/projects/tamarin/ Tamarin].

This platform library is used by [http://code.google.com/p/redtamarin/ redtamarin] (starting with v0.3).

== Details ==

You have a great program in AS3 working with Flash Player or AIR
but you want to reuse it or part of the source code in a command line tool

something like
{{{
package
{
    import flash.display.Sprite;

    public class Main extends Sprite
    {
        //...
    }
}
}}}

will simply not work in the context of Tamarin because there is no `Sprite` class definition.<br>
*avmglue* will provide this `Sprite` class definition.

<br><br>

You need to mock FPAPI classes for particular tests and/or unit tests,
the problem is that those classes are only available trough `playerglobal.swc`, `airglobal.swc`, etc.
and in fact are embedded directly in the runtime executable, you can not change them.

By using *avmglue* and Tamarin, you can change those classes,<br>
for ex: you can force the locale to be `FR_fr` on a `US_gb` system<br>
or you can emulate the domain `www.domain.com` on your localhost<br>
etc.

see:<br>
[http://code.google.com/p/maashaack/source/browse/platform/avmglue/trunk/src/flash_utils.as flash_api namespace]<br>
[http://code.google.com/p/maashaack/source/browse/platform/avmglue/trunk/src/HostConfig.as HostConfig]<br>
[http://code.google.com/p/maashaack/source/browse/platform/avmglue/trunk/src/classes/FSCommand.as FSCommand]

<br><br>

You want to write your Tamarin AS3 code in Flex Builder or other nice IDE with syntax completion etc.,<br>
`avmglue.swc` based on `avmglue.abc` should be able to ease the task and replace 1 to 1 `playerglobal.swc`.

<br><br>

So yeah, we're basicaly rewriting the whole FPAPI, with versioning (see [http://hg.mozilla.org/tamarin-central/file/fbecf6c8a86f/doc/apiversioning.txt Tamarin API versioning]), from scratch.

It will off course not happen overnight, but here the plan
 * follow the same file structure as found here in the [http://opensource.adobe.com/svn/opensource/flex/sdk/trunk/modules/asc/build/java/build.xml target playerglobalabc].
 * first, have a dumb implementation with almost no code logic<br>eg. you can extends `Sprite` but calling `addChild()` does nothing, except maybe tracing the call
 * second, have some part of the FPAPI with AS3 implementation, for ex: the `Timer` class
 * third, have some part of the FPAPI with C/C++ native implementation, for ex: the `Capabilities` class

what *avmglue* is not
 * it's not an open source flash player
 * it's not an open source flash player
 * it's not an open source flash player
 * it's not a full native implementation of the FPAPI

To really understand what *avmglue* is look at the [http://hg.mozilla.org/tamarin-central/raw-file/fbecf6c8a86f/shell/shell_toplevel.as Tamarin shell_toplevel.as class]
{{{
// The flash.system package is present so identical ATS test media can be used
// in the command-line VM and the Player
package flash.system
{
	import avmplus.*;
	
	public final class Capabilities
	{
		public static function get playerType():String { return "AVMPlus"; }
		public static function get isDebugger():Boolean { return System.isDebugger(); }
	}
}
}}}

In short, *avmglue* do the same but at the *FPAPI* level,<br>
`Capabilities.playerType` and `Capabilities.isDebugger` are nice to have but not enought<br>
so *avmglue* fill the gap with all the rest.


== Informations ==

[http://code.google.com/p/maashaack/source/browse/platform/avmglue/trunk/ browse the code]

[http://maashaack.googlecode.com/svn/platform/avmglue/trunk/ svn]

build
{{{
$ svn co http://maashaack.googlecode.com/svn/platform/avmglue/trunk/ avmglue
$ cd avmglue
$ ant
}}}

{{{
$ asc -abcfuture -out avmglue -import builtin.abc -import shell.abc flash_errors.as flash_utils.as ...
}}}

{{{
$ java -jar asc.jar macromedia.asc.embedding.ScriptCompiler -abcfuture -out avmglue -import builtin.abc -import shell.abc flash_errors.as flash_utils.as ...
}}}