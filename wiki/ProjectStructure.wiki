#summary how to organize the structure of a project.

== Introduction ==

Here are the basic rules to organize a project  directories, build, different setups, etc.

The goal is to have the same structure for each projects to automate builds globally.

== Directories =

{{{
$ROOT = one of the roots (packages,libraries,tools,platform,etc.)
$NAME = the project name
}}}

{{{
$ROOT
  |_ $NAME
      |_ branches
      |_ tags
      |_ trunk
}}}

{{{
...
  |_ trunk
      |_ bin
      |_ bin-debug
      |_ build
      |_ docs
      |   |_ $NAME
      |   |_ ...
      |     
      |_ gfx
      |   |_ fla
      |   |_ img
      |   |_ psd
      |   |_ ai
      |   |_ ico
      |   |_ etc.
      |
      |_ lib
      |_ lib-swc
      |_ src
      |_ tests
      |_ templates    -> templates base files to be used by the build
      |_ examples      -> examples files (*.fla, *.as, *.mxml, etc.)

}}}

 * *bin* files generated by the build
 * *bin-debug* files from your manual/local build
 * *build* configuration and libraries of the automated build
 * *docs* general documentation files
    * *$NAME* HTML documentation generated by asdoc
    * other files (image, UML, etc. ) related to the documentation<br>choose your own organization<br>all wiki images related to this project goes there
 * *gfx* all graphic assets files and sources
    * *fla* for `*.fla` files
    * *img* for images
    * etc.
    * choose your own organization<br>all your project logos, images etc. goes there
 * *lib* source code libraries (`*.as`)
 * *lib-swc* compiled libraries (`*.swc`)
 * *src* source code of the current project
 * *tests* general tests and unit tests