#summary how to organize the structure of a project.

== Introduction ==

Here are the basic rules to organize a project  directories, build, different setups, etc.

The goal is to have the same structure for each projects to automate builds globally.

== Directories =

{{{
$ROOT = one of the roots (packages,libraries,tools,platform,etc.)
$NAME = the project name

  |_ name   -> obligatory
  |_ (name) -> optional

}}}

in the main repository
{{{
$ROOT
  |_ $NAME
      |_ branches
      |_ tags
      |_ trunk
}}}

project structure
{{{
...
  |_ trunk
      |_ (bin)
      |_ bin-debug
      |_ bin-release
      |_ build
      |_ docs
      |   |_ $NAME
      |   |_ ...
      |     
      |_ (gfx)
      |   |_ fla
      |   |_ img
      |   |_ psd
      |   |_ ai
      |   |_ ico
      |   |_ etc.
      |
      |_ (lib)
      |_ (lib-abc)
      |_ (lib-swc)
      |_ src
      |_ tests
      |_ (html-template)
      |_ (templates)
      |_ (examples)

}}}

 * *bin* redtamarin binaries and tools (you need to manually add those)
 * *bin-release* files generated by the build
 * *bin-debug* files from your manual/local build
 * *build* configuration and libraries of the automated build
 * *docs* general documentation files
    * *$NAME* HTML documentation generated by [asdoc asdoc]
    * other files (image, UML, etc. ) related to the documentation<br>choose your own organization<br>all wiki images related to this project goes there
 * *gfx* all graphic assets files and sources
    * *fla* for `*.fla` files
    * *img* for images
    * etc.
    * choose your own organization<br>all your project logos, images etc. goes there
 * *lib* source code libraries (`*.as`)
 * *lib-abc* compiled libraries (`*.abc`)
 * *lib-swc* compiled libraries (`*.swc`)
 * *src* source code of the current project
 * *tests* general tests and unit tests
 * *html-template* Flex Builder templates (for local compilation)
 * *templates* templates base files to be used by the ant build
 * *examples* examples files (`*.as`, `*.mxml`, `*.fla`, etc.)

key files for a project
{{{
...
  |_ trunk
      |_ bin
      |_ bin-debug
      |_ build
      |   |_ build.properties
      |   |_ config.xml
      |   |_ (manifest.xml)
      |   |_ ...
      |
      |_ docs
      |_ gfx
      |_ lib-swc
      |_ src
      |   |_ ...
      |   |  |_ (version.properties)
      |   |
      |   |_ $NAME.as
      |   |_ $NAME.png
      |   |_ (Library.as)
      |
      |_ tests
      |   |_ ...
      |      |_ AllTests.as
      |
      |_ build.xml
      |_ meta.xml
      |_ (changelog.txt)
      |_ license.txt
      |_ (DEPS)
}}}

 * *build.xml* local [ant ant] build
 * *build.properties* local ant properties
 * *meta.xml* general ant build
 * *config.xml* contains the [ConditionalCompilation] settings for the project
 * *changelog.txt* changelog of your project<br>optional but highly encouraged
 * *license.txt* license of the project
 * *DEPS* gclient dependency file
 * *!AllTests.as* unit tests suite of the project<br>even if you have no unit tests define it
 * *version.properties* version file of your project<br>optional for packages<br>obligatory for libraries and tools
 * *$NAME.as* main file of your project<br>the file you use to build locally a package or library<br>the main file of a tool
 * *$NAME.png* your project icon<br>in general all packages use the same maashaack icon<br>libraries and tools can use custom icon
 * *Library.as* class definition to link the icon for a SWC (package or library)
 * *manifest.xml* manifest file for a SWC (package or library)