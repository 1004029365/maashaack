#summary maashaack framework
#labels Framework,Projects-X,Featured

= Introduction =

This is the application framework for !ActionScript 3
which have the only purpose to provide portable
cross-platform and standard packages, libraries, etc.

= Portability =

 * Flash 9
 * [http://labs.adobe.com/technologies/apollo/ AIR] ~~Apollo~~
 * [http://code.google.com/p/redtamarin/ redtamarin] (will be implemented in a different branch)

= Details =

Inspired by such projects as Mono, Python, Ruby, etc.
the goal here is to provide a set of libraries that
are made right from the start portable in the AS3 world.

The focus is on the AS3 language, APIs available in
Flash 9, Apollo, !ActionScript 3 or any other AS3 host.

= Documentation =

[Configuration]

[Serialization]

[errors Errors]

[events Event model - DOM 2/3 W3C]

[Evaluators]


= Roadmap =

== (maybe) ==

 * ui: basic layout library, mainly for debug/diagnostic tools
 * logger logic
 * console (redtamarin vs flash player, also console1)


== (v0.4.0) ==

*Diamonds Are Forever*

 * !BigNumber class
 * Math library
 * Encryption library


== (v0.3.0) ==

*Goldfinger* (all about eden)

 * clean up eden code
 * add security features in eden
 * add sub-project to test eden files on the command-line
 * add inline errors in eden (line and column)
 * add blocking/unblocking mode for eden (blocking: throw errors, unblocking: no errors that block the execution of the parsing)
 * more serializers (WDDX, PHP, JSON, etc.)
 * ressources logic (load/save etc.)

== (v0.2.0) ==

*For Your Eyes Only*

done:
 * ADT (list, collection, map, queue, etc.)
 * event model based on W3C DOM 2/3
 * Comparator, Sortable, Comparable interface and implementations
 * build as `abc` for redtamarin
 * unit tests should run on the command line

todo:
 * Environment class (refactor)
 * reflection API
 * finish and fully review all core objects: Strings, Arrays, Objects, etc.
 * URI class
 * reorganization of the documentation (wiki)
 * explain the architecture
   * core : very low-level classes without dependencies
   * system : framework classes (which can have dependencies within the framework)
   * openscreens : flash platform related libraries (SWF, AMF, SOL, etc.)
   * libraries : 3rd party libraries (zlib, ogg, etc.)
 * support and test for FP10


== v0.1.0 ==

*You Only Live Twice*

done:
 * build based on ant
 * asdoc documentation
 * build as a swc for easy use
 * better setup for unit tests
 * standardize singletons
 * configurator logic
 * evaluator logic
 * serializers logic (refactor)
 * more unit tests
 * eden is now part of system
 * cli: utils for command line tools

tag: [http://maashaack.googlecode.com/svn/tags/0.1.0 0.1.0]